import sys
import math

#Ввод вещественных коэффициентов a, b, c, d
try:
    a, b, c, d = map(float, input("Введите через пробел 4 числовых коэффициента кубического уравнения\n").split())
#Проверка на корректность входных данных
except:
    print("Ошибка: неверный формат данных")
    sys.exit()
#Решения случаев при нулевом коэффиценти при x^3
if a==0:
    if b==0:
        if c==0:
            if d==0:
                print("Решение уравнения — любое число")
            else:
                print("Нет решений уравнения")
        else:
            print(f"Ответ: x = {0-d / c}")
    #Решение обыкновенного квадратного уравнения через дискриминант
    else:
        dis=c**2-4*b*d #Дискриминант квадратного уравнения
        #Вывод двух вещественных решений уравнения при положительном дискриминанте
        if dis>0:
            print(f"Ответ:\nx_1 = {(0-c-math.sqrt(dis))/(2*b)},\nx_2 = {(0-c+math.sqrt(dis))/(2*b)}")
        #Вывод двух комплексных решений уравнения при отрицательном дискриминанте
        elif dis<0:
            x_1=complex(0-c, -math.sqrt(-dis)) / (2 * b)
            x_2=complex(0-c, math.sqrt(-dis)) / (2 * b)
            print(f"Ответ:\nx_1 = {x_1 if x_1.imag!=0 else x_1.real},\nx_2 = {x_2 if x_2.imag!=0 else x_2.real}")
        #Вывод одного вещественного решения уравнения при нулевом дискриминанте
        else:
            print(f"Ответ: x_1 = x_2 = {0-c / 2*b}")
#Метод Кардано при a!=0
else:
    #Инициализация и расчет вспомогательных переменных для удобной замены
    r=b/a
    s=c/a
    t=d/a
    p=(3*s-r*r)/3
    q=(2*(r**3))/27-r*s/3+t
    #Вычисление дискриминанта
    W = (p / 3)**3 + (q / 2)**2
    #Рассчет и вывод вещественного и двух комплексных решений уравнения
    if round(W,14)>=0:
        #расчет вспомогательных и искомых переменных
        u=math.cbrt(-q/2+math.sqrt(W))
        v=math.cbrt(-q/2-math.sqrt(W))
        x_1=round(u+v-r/3,14)
        h=round(-(u+v)/2-r/3,14)
        g=round(((u-v)/2)*math.sqrt(3),14)
        #Вывод при нулевой комплексной части одного из решений уравнения
        if g==0:
            x_2=h #Нулевая комплексная часть обращает решение уравнения в вещественное число
            #Вывод трехкратного вещестевенного решения уравнения
            if x_2==x_1:
                print(f"Ответ:\nx_1 = x_2 = x_3 = {x_1}")
            # Вывод однократного и двукратного вещественного решения уравнения
            else:
                print(f"Ответ:\nx_1 = {x_1},\nx_2 = x_3 = {x_2}")
        else:#Расчет двух комплексных решений уравнения
            x_2=complex(h,g)
            x_3=complex(h,-g)
            #Вывод вещестевенного решения уравнения и двух комплексных
            print(f"Ответ:\nx_1 = {x_1},\nx_2 = {x_2}\nx_3 = {x_3}")

    # Рассчет и вывод трех вещественных решений уравнения
    else:
        s = math.sqrt(-p**3/27)
        phi=math.acos(-q/(2*s))
        x_1=round(2*math.cbrt(s)*math.cos(phi/3)-b/a/3,14)
        x_2=round(2*math.cbrt(s)*math.cos(phi/3+2*math.pi/3)-b/(a*3),14)
        x_3=round(2*math.cbrt(s)*math.cos(phi/3+4*math.pi/3)-b/(a*3),14)
        print(f"Ответ:\nx_1 = {x_1},\nx_2 = {x_2},\nx_3 = {x_3}")